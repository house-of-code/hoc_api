
class User < ActiveRecord::Base
  acts_as_hoc_user
  acts_as_hoc_pushable
  <% if install_notifications? -%>
  acts_as_hoc_notifications_receiver
  acts_as_hoc_notifications_sender
  <% end -%>

  <% if enable_user_avatar? -%>
  has_one_attached :avatar
  attr_accessor :avatar_contents
  attr_accessor :avatar_name
  before_save :clear_avatar
  after_save :parse_avatar
  #validate :avatar_validations, on: :create
  <% end -%>
  acts_as_api
  <%= api_accessible("basic", [":id", ":email"] + user_field_names + ([":avatar_url"] if enable_user_avatar?)) -%>

  <% if enable_user_avatar? -%>
  def avatar_url
    if avatar.attached?
      Rails.application.routes.url_helpers.rails_blob_url(avatar, host: Rails.configuration.default_url_options[:host])
    else
      "https://www.gravatar.com/avatar/#{Digest::MD5.hexdigest(email)}"
    end
  end

  def clear_avatar
    if remove_avatar == '1'
      avatar_contents = nil
      avatar.purge_later
    end
  end

  def parse_avatar
    # If directly uploaded
    unless avatar_contents.nil? || avatar_contents[/(image\/[a-z]{3,4})|(application\/[a-z]{3,4})/] == ''
      content_type = avatar_contents[/(image\/[a-z]{3,4})|(application\/[a-z]{3,4})/]
      content_type = content_type[/\b(?!.*\/).*/]
      contents = avatar_contents.sub /data:((image|application)\/.{3,}),/, ''
      decoded_data = Base64.decode64(contents)
      mini_magick = MiniMagick::Image.read(decoded_data)
      mini_magick.resize "100x100>"
      decoded_data  = mini_magick.to_blob
      filename = avatar_name || "avatar_#{Time.zone.now.to_i}.#{content_type}"
      File.open("#{Rails.root}/tmp/storage/#{filename}", 'wb') do |f|
        f.write(decoded_data)
      end
      avatar.attach(io: File.open("#{Rails.root}/tmp/storage/#{filename}"), filename: filename)
      #FileUtils.rm("#{Rails.root}/tmp/images/#{filename}")
    end
  end

  <% if install_notifications? -%>
  # This method get called if a hoc notification is received
  def handle_received_notification(hoc_notification)
  end
  <% end -%>


  private

  <% end -%>

end
